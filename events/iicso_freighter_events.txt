namespace = iicso

#called by yearly pulse gate event (semi-annually)
#sends event to planets with stockpiles randomly throughout the half-year
country_event = {
    id = iicso.500
    is_triggered_only = yes
    hide_window = yes

    trigger = { has_global_flag = iicso_active }

    immediate = {
        every_planet = {
            limit = {
                NOT = { has_planet_flag = running_freighters }
                OR = {
                    AND = {
                        has_mining_station = yes
                        has_stockpile = yes
                    }
                    AND = {
                        is_primary_star = yes
                        has_stockpile = yes
                        solar_system = { exists = starbase }
                    }
                }
            }
            planet_event = {
                id = iicso.501
                days = 1
                random = 179
            }
        }
    }
}

#called by iicso.500, calls itself
#spawns freighters type depending on origin
planet_event = {
    id = iicso.501
    is_triggered_only = yes
    hide_window = yes

    trigger = { has_global_flag = iicso_active }

    immediate = {
        #log = "system freighters triggered at [THIS.GetName] for empire [THIS.solar_system.space_owner.GetName]"
        if = {
            limit = {
                solar_system = {
                    exists = starbase
                    starbase = {
                        controller = { is_same_value = PREV.owner }
                    }
                }
            }
            if = {
                limit = { has_sufficient_stockpile = yes }
                if = { #if mining station is owned by corp, fleet is corp
                    limit = {
                        exists = mining_station
                        mining_station = { owner = { is_country_type = iicso_corporate_country }}
                    }
                    mining_station = { owner = { save_event_target_as = iicso_fleet_owner }}
                }
                else = { #otherwise, fleet is owned by civilian vessels country
                    random_country = {
                        limit = { has_country_flag = iicso_faction_of@ROOT.space_owner }
                        save_event_target_as = iicso_fleet_owner
                    }
                }
    
                if = {
                    limit = {
                        ROOT = {
                            is_primary_star = yes
                            solar_system = {
                                starbase = { has_starbase_module = trading_hub }
                            }
                        }
                    }
                    create_fleet = {
                        name = hub_freighter_fleet
                        effect = {
                            set_owner = event_target:iicso_fleet_owner
                            create_station_freighter_ships = yes
                            set_location = PREVPREV
                            set_fleet_flag = hub_freighter
                        }
                    }
                }
                else_if = {
                    limit = { ROOT = { is_primary_star = yes }}
                    create_fleet = {
                        name = system_freighter_fleet
                        effect = {
                            set_owner = event_target:iicso_fleet_owner
                            create_station_freighter_ships = yes
                            set_location = PREVPREV
                            set_fleet_flag = system_freighter
                        }
                    }
                }
                else = {
                    create_fleet = {
                        name = station_freighter_fleet
                        effect = {
                            set_owner = event_target:iicso_fleet_owner
                            create_station_freighter_ships = yes
                            set_location = PREVPREV
                            set_fleet_flag = station_freighter
                        }
                    }
                }
                last_created_fleet = {
                    set_timed_fleet_flag = {
                        flag = orders_received
                        days = 360
                    }
                    if = {
                        limit = {
                            ROOT = {
                                is_primary_star = yes
                            }
                        }
                        fleet_event = {
                            id = iicso.503
                            days = 5
                            random = 10
                        }
                    }
                    else = {
                        fleet_event = {
                            id = iicso.502
                            days = 5
                            random = 10
                        }
                    }
                }
            }
    
            set_timed_planet_flag = {
                flag = running_freighters
                days = 180
            }
            planet_event = {
                id = iicso.501
                days = 180
            }
        }
    }
}

#called by iicso.501
#station freighter fleet finds destination within its system
fleet_event = {
    id = iicso.502
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        has_global_flag = iicso_active
        exists = FROM
    }

    immediate = {
        solar_system = {
            if = {
                limit = {
                    any_system_planet = {
                        is_colony = yes
                        controller = { is_same_value = PREV.owner }
                        NOT = { has_orbital_bombardment = yes }
                    }
                }
                
                random_system_planet = {
                    limit = {
                        is_colony = yes
                        controller = { is_same_value = PREV.owner }
                        NOT = { has_orbital_bombardment = yes }
                    }
                    weights = {
                        base = 1
                        modifier = {
                            mult = 2
                            is_capital = yes
                        }
                    }
                    ROOT = {
                        set_timed_fleet_flag = {
                            flag = orders_received
                            days = 360
                        }
                        set_fleet_flag = fleet_destination@PREV
                        set_fleet_flag = enroute_to_colony
                        auto_move_to_planet = {
                            target = PREV
                            clear_auto_move_on_arrival = no
                            arrival_effect = deposit_cargo_at_colony
                        }
                    }
                }
            }
            else = {
                random_system_planet = {
                    limit = { is_primary_star = yes }
                    ROOT = {
                        set_timed_fleet_flag = {
                            flag = orders_received
                            days = 360
                        }
                        set_fleet_flag = fleet_destination@PREV
                        set_fleet_flag = enroute_to_starbase
                        auto_move_to_planet = {
                            target = PREV
                            clear_auto_move_on_arrival = no
                            arrival_effect = deposit_cargo_at_starbase
                        }
                    }
                }
            }
        }
    }
}

#called by iicso.501
#freighters find destination outside system
fleet_event = {
    id = iicso.503
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        has_global_flag = iicso_active
        OR = {
            has_fleet_flag = hub_freighter
            has_fleet_flag = system_freighter
        }
    }

    immediate = {
        random_country = {
            limit = {
                OR = {
                    has_country_flag = iicso_faction_is@ROOT.owner
                    has_country_flag = iicso_corporation_is@ROOT.owner
                }
            }
            ROOT = {
                closest_system = {
                    limit = {
                        exists = space_owner
                        space_owner = { is_same_value = PREVPREVPREV }
                        OR = {
                            any_system_planet = {
                                is_colony = yes
                                exists = owner
                                owner = { is_same_value = PREVPREVPREVPREV }
                                NOT = { has_orbital_bombardment = yes }
                                controller = { is_same_value = PREV.owner }
                            }
                            AND = {
                                ROOT = { NOT = { has_fleet_flag = hub_freighter }}
                                exists = starbase
                                starbase = {
                                    has_starbase_module = trading_hub
                                    exists = owner
                                    owner = { is_same_value = PREVPREVPREVPREV }
                                    controller = { is_same_value = PREV.owner }
                                }
                            }
                        }
                    }
                    random_system_planet = {
                        limit = {
                            OR = {
                                AND = {
                                    is_colony = yes
                                    NOT = { has_orbital_bombardment = yes }
                                    controller = { is_same_value = PREV.owner }
                                }
                                AND = {
                                    is_primary_star = yes
                                    solar_system = {
                                        starbase = {
                                            has_starbase_module = trading_hub
                                            controller = { is_same_value = PREV.owner }
                                        }
                                    }
                                }
                            }
                        }
                        weights = {
                            base = 1
                            modifier = {
                                add = -1
                                is_primary_star = yes
                                solar_system = {
                                    any_system_planet = {
                                        is_colony = yes
                                        exists = owner
                                        owner = { is_same_value = PREVPREVPREVPREV }
                                        NOT = { has_orbital_bombardment = yes }
                                        controller = { is_same_value = PREV.owner }
                                    }
                                }
                            }
                        }
                        ROOT = {
                            set_timed_fleet_flag = {
                                flag = orders_received
                                days = 360
                            }

                            if = {
                                limit = {
                                    PREV = { is_primary_star = yes }
                                }
                                set_fleet_flag = fleet_destination@PREV
                                set_fleet_flag = enroute_to_starbase
                                auto_move_to_planet = {
                                    target = PREV
                                    clear_auto_move_on_arrival = no
                                    arrival_effect = deposit_cargo_at_starbase
                                }
                            }
                            else = {
                                set_fleet_flag = fleet_destination@PREV
                                set_fleet_flag = enroute_to_colony
                                auto_move_to_planet = {
                                    target = PREV
                                    clear_auto_move_on_arrival = no
                                    arrival_effect = deposit_cargo_at_colony
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}