#########################################################
############### 9xx. Corporation Events #################
#########################################################

namespace = iicso

#test event (spawns a lot of corporations) (inactive)
event = {
	id = iicso.9000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = iicso_active
		#NOT = { has_global_flag = spawned_corporations }
	}
	immediate = {
        if = { limit = { has_global_flag = iicso_debug_mode }
			log = "iicso.9000 triggered (corp test spawner)" }
		#set_global_flag = spawned_corporations
		
		while = {
			count = 30
			create_country = {
				name = random
				type = iicso_corporate_country
				ignore_initial_colony_error = yes
				auto_delete = no

				flag = random
				name_list = random
				species = random
			}
			last_created_country = {
				set_name = random
			}
			#log = "[last_created_country.GetName] has been spawned as a corporation!"
		}
	}
}

#sends events to countries randomly within 5 years to spawn corps, triggered by 5 year pulse
country_event = {
	id = iicso.900
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = iicso_active
		is_country_type = default
		OR = {
			has_policy_flag = weak_corporate_freedom
			has_policy_flag = strong_corporate_freedom
			has_policy_flag = pseudonational_corporations
		}
	}

	immediate = {
        if = { limit = { has_global_flag = iicso_debug_mode }
			log = "iicso.900 triggered at [THIS.GetName] (country: corp spawner gatekeeper)" }
		country_event = {
			id = iicso.901
			days = 1
			random = 1799
		}
	}
}

#creates corporations for empires under their corp limit, fired by iicso.900
country_event = {
	id = iicso.901
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = iicso_active
		is_country_type = default
		OR = {
			has_policy_flag = weak_corporate_freedom
			has_policy_flag = strong_corporate_freedom
			has_policy_flag = pseudonational_corporations
		}
	}

	immediate = {
        if = { limit = { has_global_flag = iicso_debug_mode }
			log = "iicso.901 triggered at [THIS.GetName] (country: corp spawner)" }
		#one corp at 5, 2 at 20, 3 at 50, 1 per 50 systems after that (so 4 at 100)
		every_system_within_border = {
			ROOT = { change_variable = { which = iicso_corp_cap value = 1 }}
		}
		#log = "[THIS.GetName] has [THIS.iicso_corp_cap] systems"
		if = {
			limit = { check_variable = { which = iicso_corp_cap value < 5 }}
			set_variable = { which = iicso_corp_cap value = 0 }
		} else_if = {
			limit = { check_variable = { which = iicso_corp_cap value < 20 }}
			set_variable = { which = iicso_corp_cap value = 1 }
		} else_if = {
			limit = { check_variable = { which = iicso_corp_cap value < 50 }}
			set_variable = { which = iicso_corp_cap value = 2 }
		} else = {
			change_variable = { which = iicso_corp_cap value = -50 }
			divide_variable = { which = iicso_corp_cap value = 50 }
			#remove remainder
			set_variable = { which = iicso_corp_cap_temp value = iicso_corp_cap }
			while = {
				limit = { check_variable = { which = iicso_corp_cap_temp value >= 1 }}
				change_variable = { which = iicso_corp_cap_temp value = -1 }
			}
			subtract_variable = { which = iicso_corp_cap value = iicso_corp_cap_temp }
			change_variable = { which = iicso_corp_cap value = 3 }
			set_variable = { which = iicso_corp_cap_temp value = 0 }
		}
		#log = "[THIS.GetName] has corporation cap of [THIS.iicso_corp_cap]"

		every_country = {
			limit = { has_country_flag = iicso_corporation_of@PREV }
			ROOT = { change_variable = { which = iicso_corp_count value = 1 }}
		}
		#log = "[THIS.GetName] has [THIS.iicso_corp_count] corporations"

		if = {
			limit = { check_variable = { which = iicso_corp_count value < iicso_corp_cap }}

			if = {
				limit = { NOT = { has_country_flag = Story7 }}
				set_country_flag = Story7
				set_country_flag = avoiding_first_contact
			}

			random_owned_pop = {
				limit = {
					has_citizenship_type = { country = PREV type = citizenship_full }
				}
				species = {
					# random_country = {
					# 	limit = { owner_species = { is_same_value = PREVPREV }}
						create_country = {
							name = "Nice"
							type = iicso_corporate_country
							ignore_initial_colony_error = yes
							auto_delete = no
		
							flag = random
							name_list = ROOT #I would like this to be species name list
							species = THIS

							effect = {
								ROOT = {
									establish_communications_no_message = PREV
									set_country_flag = iicso_corporation_is@PREV
								}
								save_event_target_as = last_created_corp
								# set_subject_of = {
								# 	who = ROOT
								# 	subject_type = iicso_corporate_subject
								# }
								set_faction_hostility = { target = ROOT set_hostile = no set_neutral = no set_friendly = yes }
								ROOT = { set_faction_hostility = { target = PREV set_hostile = no set_neutral = no set_friendly = yes }}
								set_country_flag = iicso_corporation_of@ROOT
								copy_techs_from = { target = ROOT }
								every_country = {
									limit = {
										has_communications = ROOT
										NOT = { has_country_flag = iicso_corporation_is@PREV }
									}
									establish_communications_no_message = PREV
								}
								#log = "test: [THIS.GetName] is a corporation. Overlord is [THIS.overlord.GetName]"
								#log = "[THIS.GetName] is corporation of [ROOT.GetName]"
							}
						}
					# }
				}
			}

			if = {
				limit = { has_country_flag = avoiding_first_contact }
				remove_country_flag = Story7
				remove_country_flag = avoiding_first_contact
			}

			country_event = { id = iicso.902 } #notify country of corp creation
		}


		set_variable = { which = iicso_corp_cap value = 0 }
		set_variable = { which = iicso_corp_count value = 0 }
	}
}

#notifies empire that a corporation has been created, triggered by iicso.901
country_event = {
	id = iicso.902
	title = "iicso.902.name"
	desc = "iisco.902.desc"
	picture = GFX_evt_busy_spaceport
	is_triggered_only = yes

	immediate = {
        if = { limit = { has_global_flag = iicso_debug_mode }
			log = "iicso.902 triggered at [THIS.GetName] (country: corp spawner message event)" }
	}

	option = {
		name = "OK"
	}
}



#gives corporations 1/5 of mining stations
#fired every six months by annual gatekeeper
country_event = {
    id = iicso.910
    is_triggered_only = yes
    hide_window = yes

    trigger = {
		has_global_flag = iicso_active
		is_country_type = default
		OR = {
			has_policy_flag = weak_corporate_freedom
			has_policy_flag = strong_corporate_freedom
			has_policy_flag = pseudonational_corporations
		}
	}

    immediate = {
        if = { limit = { has_global_flag = iicso_debug_mode }
			log = "iicso.910 triggered at [THIS.GetName] (country: corp station distributor)" }
		
		every_planet_within_border = {
			limit = { has_mining_station = yes }
			ROOT = { change_variable = { which = iicso_corp_station_cap value = 1 }}
			if = {
				limit = { mining_station = { owner = { is_country_type = iicso_corporate_country }}}
				#TEMPORARY CLEANUP v0.3b
				set_variable = { which = iicso_corp_station_count value = 0 }
				#TEMPORARY CLEANUP v0.3b
				ROOT = { change_variable = { which = iicso_corp_station_count value = 1 }}
			}
		}

		divide_variable = { which = iicso_corp_station_cap value = 5 }
		#remove remainder
		set_variable = { which = iicso_corp_station_cap_temp value = iicso_corp_station_cap }
		while = {
			limit = { check_variable = { which = iicso_corp_station_cap_temp value >= 1 }}
			change_variable = { which = iicso_corp_station_cap_temp value = -1 }
		}
		subtract_variable = { which = iicso_corp_station_cap value = iicso_corp_station_cap_temp }
		set_variable = { which = iicso_corp_station_cap_temp value = 0 }

		#log = "[THIS.GetName] has [THIS.iicso_corp_station_count] corporate stations and a cap of [THIS.iicso_corp_station_cap]"
		if = {
			limit = {
				check_variable = { which = iicso_corp_station_count value < iicso_corp_station_cap }
			}
			random_planet_within_border = {
				limit = { has_mining_station = yes }
				mining_station = {
					random_country = {
						limit = { has_country_flag = iicso_corporation_of@ROOT }
						PREV = {
							set_owner = PREV
						}
					}
				}
			}
		}
		set_variable = { which = iicso_corp_station_count value = 0 }
		set_variable = { which = iicso_corp_station_cap value = 0 }
    }
}