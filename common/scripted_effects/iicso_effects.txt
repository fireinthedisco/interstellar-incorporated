#called in auto move arrival effects
#THIS is fleet, FROM is planet
deposit_cargo_at_colony = {
    #log = "deposit_cargo_at_colony is called by [FROMFROM.owner.GetName]"
    deposit_resource_into_account = { RESOURCE = minerals }
    deposit_resource_into_account = { RESOURCE = alloys }
    deposit_resource_into_account = { RESOURCE = exotic_gases }
    deposit_resource_into_account = { RESOURCE = rare_crystals }
    deposit_resource_into_account = { RESOURCE = volatile_motes }
    deposit_resource_into_account = { RESOURCE = sr_zro }
    deposit_resource_into_account = { RESOURCE = sr_dark_matter }
    deposit_resource_into_account = { RESOURCE = sr_living_metal }
    deposit_resource_into_account = { RESOURCE = food }
    deposit_resource_into_account = { RESOURCE = consumer_goods }
    deposit_resource_into_account = { RESOURCE = energy }
    remove_fleet_flag = enroute_to_home
    if = {
        limit = {
            OR = {
                #has_fleet_flag = kill_switch
                has_fleet_flag = station_freighter
                has_fleet_flag = system_freighter
                has_fleet_flag = hub_freighter
            }
        }
        fleet_event = {
            id = iicso.504
            days = 5
            random = 10
        }
    }
    else = {
        fleet_event = {
            id = iicso.402
            days = 10
            random = 10
        }
    }
}

deposit_cargo_at_starbase = {
    deposit_resource_into_stockpile = { RESOURCE = minerals }
    deposit_resource_into_stockpile = { RESOURCE = alloys }
    deposit_resource_into_stockpile = { RESOURCE = exotic_gases }
    deposit_resource_into_stockpile = { RESOURCE = rare_crystals }
    deposit_resource_into_stockpile = { RESOURCE = volatile_motes }
    deposit_resource_into_stockpile = { RESOURCE = sr_zro }
    deposit_resource_into_stockpile = { RESOURCE = sr_dark_matter }
    deposit_resource_into_stockpile = { RESOURCE = sr_living_metal }
    deposit_resource_into_stockpile = { RESOURCE = food }
    deposit_resource_into_stockpile = { RESOURCE = consumer_goods }
    deposit_resource_into_stockpile = { RESOURCE = energy }

    # fleet_event = {
    #     id = iicso.504
    #     days = 5
    #     random = 10
    # }
    delete_fleet = THIS
}

deposit_resource_into_account = {
    while = {
        count = cargo_$RESOURCE$
        FROM = { owner = { add_resource = { $RESOURCE$ = 1 }}}
    }
    set_variable = { which = cargo_$RESOURCE$ value = 0 }
}

deposit_resource_into_stockpile = {
    while = {
        count = cargo_$RESOURCE$
        FROM = { change_variable = { which = iicso_stockpile_$RESOURCE$ value = 1 }}
    }
    set_variable = { which = cargo_$RESOURCE$ value = 0 }
}

calculate_empty_cargo = {
    set_variable = { which = empty_cargo value = 0 }
    owner = {
        every_owned_ship = {
            limit = {
                fleet = { is_same_value = PREVPREVPREV }
                OR = {
                    has_ship_flag = large_cargo_ship
                    has_ship_flag = medium_cargo_ship
                    has_ship_flag = small_cargo_ship
                    has_ship_flag = civilian_miner
                    has_ship_flag = civilian_gas_miner
                }
            }
            if = {
                limit = { has_ship_flag = large_cargo_ship }
                PREVPREV = { change_variable = { which = empty_cargo value = @large_cargo_capacity }}
            } else_if = {
                limit = {
                    OR = {
                        has_ship_flag = medium_cargo_ship
                        has_ship_flag = civilian_miner
                        has_ship_flag = civilian_gas_miner
                    }
                }
                PREVPREV = { change_variable = { which = empty_cargo value = @medium_cargo_capacity }}
            } else_if = {
                limit = { has_ship_flag = small_cargo_ship }
                PREVPREV = { change_variable = { which = empty_cargo value = @small_cargo_capacity }}
            }
        }
    }
    subtract_variable = { which = empty_cargo value = cargo_minerals }
    subtract_variable = { which = empty_cargo value = cargo_alloys }
    subtract_variable = { which = empty_cargo value = cargo_exotic_gases }
    subtract_variable = { which = empty_cargo value = cargo_rare_crystals }
    subtract_variable = { which = empty_cargo value = cargo_volatile_motes }
    subtract_variable = { which = empty_cargo value = cargo_sr_zro }
    subtract_variable = { which = empty_cargo value = cargo_sr_dark_matter }
    subtract_variable = { which = empty_cargo value = cargo_sr_living_metal }

    subtract_variable = { which = empty_cargo value = cargo_food }
    subtract_variable = { which = empty_cargo value = cargo_consumer_goods }
    subtract_variable = { which = empty_cargo value = cargo_energy }
}

miner_arrival = {
    if = {
        limit = { has_fleet_flag = enroute_to_mine }
        remove_fleet_flag = enroute_to_mine
        set_fleet_flag = mining_in_progress@orbit
        #log = "Miner arrived at mining target [orbit.GetName]"
    }
}

add_resource_to_miner = {
    random_list = {
        0 = {
            modifier = {
                add = 20
                check_variable = { which = empty_cargo value < 2 }
            }
            change_variable = { which = cargo_$RESOURCE$ value = 1 }
            change_variable = { which = empty_cargo value = -1 }
        }
        20 = {
            modifier = {
                factor = 0
                check_variable = { which = empty_cargo value < 2 }
            }
            change_variable = { which = cargo_$RESOURCE$ value = 2 }
            change_variable = { which = empty_cargo value = -2 }
        }
        20 = {
            modifier = {
                factor = 0
                check_variable = { which = empty_cargo value < 3 }
            }
            change_variable = { which = cargo_$RESOURCE$ value = 3 }
            change_variable = { which = empty_cargo value = -3 }
        }
        20 = {
            modifier = {
                factor = 0
                check_variable = { which = empty_cargo value < 4 }
            }
            change_variable = { which = cargo_$RESOURCE$ value = 4 }
            change_variable = { which = empty_cargo value = -4 }
        }
        20 = {
            modifier = {
                factor = 0
                check_variable = { which = empty_cargo value < 5 }
            }
            change_variable = { which = cargo_$RESOURCE$ value = 5 }
            change_variable = { which = empty_cargo value = -5 }
        }
        20 = {
            modifier = {
                factor = 0
                check_variable = { which = empty_cargo value < 6 }
            }
            change_variable = { which = cargo_$RESOURCE$ value = 6 }
            change_variable = { which = empty_cargo value = -6 }
        }
    }
}

add_cargo_to_miner = {
    if = {
        limit = { has_fleet_flag = civilian_miner }
        add_resource_to_miner = { RESOURCE = minerals }
    }
    else_if = {
        limit = { has_fleet_flag = civilian_gas_miner }
        add_resource_to_miner = { RESOURCE = energy }
    }
}

trader_arrival = {
    FROM = { add_modifier = { modifier = trader_has_arrived days = 360 }}
    remove_fleet_flag = enroute_to_trade_target
    set_fleet_flag = enroute_to_home
    set_timed_fleet_flag = {
        flag = orders_received
        days = 360
    }
    random_planet = {
        limit = { PREV = { has_fleet_flag = fleet_home@PREV }}
        PREV = {
            auto_move_to_planet = {
                target = PREV
                clear_auto_move_on_arrival = no
                arrival_effect = trader_arrival_home
            }
        }
    }
}

trader_arrival_home = {
    FROM = { add_modifier = { modifier = trader_has_arrived days = 360 }}
    delete_fleet = THIS
}

create_station_freighter_ships_add_resource = {
    while = {
        limit = {
            check_variable = { which = cargo_load value > 0 }
            PREVPREV = { check_variable = { which = iicso_stockpile_$RESOURCE$ value > 0 }}
        }
        change_variable = { which = cargo_load value = -1 }
        change_variable = { which = cargo_$RESOURCE$ value = 1 }
        change_variable = { which = ship_cargo_$RESOURCE$ value = 1 }
        PREVPREV = { change_variable = { which = iicso_stockpile_$RESOURCE$ value = -1 }}
        PREVPREV = { change_variable = { which = total_stockpile value = -1 }}
    }
}
create_station_freighter_ships = {
    PREVPREV = {
        set_variable = { which = total_stockpile value = 0 }
        change_variable = { which = total_stockpile value = iicso_stockpile_minerals }
        change_variable = { which = total_stockpile value = iicso_stockpile_alloys }
        change_variable = { which = total_stockpile value = iicso_stockpile_exotic_gases }
        change_variable = { which = total_stockpile value = iicso_stockpile_rare_crystals }
        change_variable = { which = total_stockpile value = iicso_stockpile_volatile_motes }
        change_variable = { which = total_stockpile value = iicso_stockpile_sr_zro }
        change_variable = { which = total_stockpile value = iicso_stockpile_sr_dark_matter }
        change_variable = { which = total_stockpile value = iicso_stockpile_sr_living_metal }
        change_variable = { which = total_stockpile value = iicso_stockpile_food }
        change_variable = { which = total_stockpile value = iicso_stockpile_consumer_goods }
        change_variable = { which = total_stockpile value = iicso_stockpile_energy }
    }
    while = {
        limit = {
            PREVPREV = {
                has_stockpile = yes
            }
        }
        if = {
            limit = { PREVPREV = { check_variable = { which = total_stockpile value >= @min_large_cargo_capacity }}}
            set_fleet_flag = large_cargo_ship
            set_variable = { which = cargo_load value = @large_cargo_capacity }
        } else_if = {
            limit = { PREVPREV = { check_variable = { which = total_stockpile value >= @min_medium_cargo_capacity }}}
            set_fleet_flag = medium_cargo_ship
            set_variable = { which = cargo_load value = @medium_cargo_capacity }
        } else = {
            set_fleet_flag = small_cargo_ship
            set_variable = { which = cargo_load value = @small_cargo_capacity}
        }

        create_station_freighter_ships_add_resource = { RESOURCE = minerals }
        create_station_freighter_ships_add_resource = { RESOURCE = alloys }
        create_station_freighter_ships_add_resource = { RESOURCE = exotic_gases }
        create_station_freighter_ships_add_resource = { RESOURCE = rare_crystals }
        create_station_freighter_ships_add_resource = { RESOURCE = volatile_motes }
        create_station_freighter_ships_add_resource = { RESOURCE = sr_zro }
        create_station_freighter_ships_add_resource = { RESOURCE = sr_dark_matter }
        create_station_freighter_ships_add_resource = { RESOURCE = sr_living_metal }
        create_station_freighter_ships_add_resource = { RESOURCE = food }
        create_station_freighter_ships_add_resource = { RESOURCE = consumer_goods }
        create_station_freighter_ships_add_resource = { RESOURCE = energy }

        set_variable = { which = cargo_load value = 0 }

        #freighter type resources
        change_variable = { which = ship_cargo_freighter_type value = ship_cargo_minerals }
        change_variable = { which = ship_cargo_freighter_type value = ship_cargo_alloys }
        change_variable = { which = ship_cargo_freighter_type value = ship_cargo_rare_crystals }
        change_variable = { which = ship_cargo_freighter_type value = ship_cargo_consumer_goods }
        change_variable = { which = ship_cargo_freighter_type value = ship_cargo_food }
        change_variable = { which = ship_cargo_freighter_type value = ship_cargo_sr_zro }

        #tanker type resources
        change_variable = { which = ship_cargo_tanker_type value = ship_cargo_exotic_gases }
        change_variable = { which = ship_cargo_tanker_type value = ship_cargo_volatile_motes }
        change_variable = { which = ship_cargo_tanker_type value = ship_cargo_sr_dark_matter }
        change_variable = { which = ship_cargo_tanker_type value = ship_cargo_sr_living_metal }
        change_variable = { which = ship_cargo_tanker_type value = ship_cargo_energy }

        if = {
            limit = {
                OR = {
                    AND = {
                        has_fleet_flag = large_cargo_ship
                        check_variable = { which = ship_cargo_freighter_type value < @min_large_cargo_capacity }
                        check_variable = { which = ship_cargo_tanker_type value > @min_large_cargo_capacity }
                    }
                    AND = {
                        has_fleet_flag = medium_cargo_ship
                        check_variable = { which = ship_cargo_freighter_type value < @min_medium_cargo_capacity }
                        check_variable = { which = ship_cargo_tanker_type value > @min_medium_cargo_capacity }
                    }
                    AND = {
                        has_fleet_flag = small_cargo_ship
                        check_variable = { which = ship_cargo_freighter_type value < @min_small_cargo_capacity }
                        check_variable = { which = ship_cargo_tanker_type value > @min_small_cargo_capacity }
                    }
                }
            }
            set_fleet_flag = tanker_cargo_ship
        } else_if = {
            limit = {
                OR = {
                    AND = {
                        has_fleet_flag = large_cargo_ship
                        check_variable = { which = ship_cargo_tanker_type value < @min_large_cargo_capacity }
                        check_variable = { which = ship_cargo_freighter_type value > @min_large_cargo_capacity }
                    }
                    AND = {
                        has_fleet_flag = medium_cargo_ship
                        check_variable = { which = ship_cargo_tanker_type value < @min_medium_cargo_capacity }
                        check_variable = { which = ship_cargo_freighter_type value > @min_medium_cargo_capacity }
                    }
                    AND = {
                        has_fleet_flag = small_cargo_ship
                        check_variable = { which = ship_cargo_tanker_type value < @min_small_cargo_capacity }
                        check_variable = { which = ship_cargo_freighter_type value > @min_small_cargo_capacity }
                    }
                }
            }
            set_fleet_flag = freighter_cargo_ship
        } else_if = {
            limit = {
                check_variable = { which = ship_cargo_tanker_type value > 0 }
                check_variable = { which = ship_cargo_freighter_type value > 0 }
            }
            set_fleet_flag = mixed_cargo_ship
        } else_if = {
            limit = { check_variable = { which = ship_cargo_tanker_type value > 0 }}
            set_fleet_flag = tanker_cargo_ship
        } else_if = {
            limit = { check_variable = { which = ship_cargo_freighter_type value > 0 }}
            set_fleet_flag = freighter_cargo_ship
        }

        if = {
            limit = { ROOT = { space_owner = { has_policy_flag = banned_armament }}}
            if = {
                limit = { has_fleet_flag = large_cargo_ship has_fleet_flag = freighter_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_double_freighter_unarmed }
            } else_if = {
                limit = { has_fleet_flag = large_cargo_ship has_fleet_flag = tanker_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_double_tanker_unarmed }
            } else_if = {
                limit = { has_fleet_flag = large_cargo_ship has_fleet_flag = mixed_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_double_tankerfreighter_unarmed }
            } else_if = {
                limit = { has_fleet_flag = medium_cargo_ship has_fleet_flag = freighter_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_freighter_unarmed }
            } else_if = {
                limit = { has_fleet_flag = medium_cargo_ship has_fleet_flag = tanker_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_tanker_unarmed }
            } else_if = {
                limit = { has_fleet_flag = medium_cargo_ship has_fleet_flag = mixed_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_tankerfreighter_unarmed }
            } else_if = {
                limit = { has_fleet_flag = small_cargo_ship has_fleet_flag = freighter_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_half_freighter_unarmed }
            } else_if = {
                limit = { has_fleet_flag = small_cargo_ship has_fleet_flag = tanker_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_half_tanker_unarmed }
            } else_if = {
                limit = { has_fleet_flag = small_cargo_ship has_fleet_flag = mixed_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_half_tankerfreighter_unarmed }
            }
        } else_if = {
            limit = { ROOT = { space_owner = { has_policy_flag = limited_armament }}}
            if = {
                limit = { has_fleet_flag = large_cargo_ship has_fleet_flag = freighter_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_double_freighter }
            } else_if = {
                limit = { has_fleet_flag = large_cargo_ship has_fleet_flag = tanker_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_double_tanker }
            } else_if = {
                limit = { has_fleet_flag = large_cargo_ship has_fleet_flag = mixed_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_double_tankerfreighter }
            } else_if = {
                limit = { has_fleet_flag = medium_cargo_ship has_fleet_flag = freighter_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_freighter }
            } else_if = {
                limit = { has_fleet_flag = medium_cargo_ship has_fleet_flag = tanker_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_tanker }
            } else_if = {
                limit = { has_fleet_flag = medium_cargo_ship has_fleet_flag = mixed_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_tankerfreighter }
            } else_if = {
                limit = { has_fleet_flag = small_cargo_ship has_fleet_flag = freighter_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_half_freighter }
            } else_if = {
                limit = { has_fleet_flag = small_cargo_ship has_fleet_flag = tanker_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_half_tanker }
            } else_if = {
                limit = { has_fleet_flag = small_cargo_ship has_fleet_flag = mixed_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_half_tankerfreighter }
            }
        } else_if = {
            limit = { ROOT = { space_owner = { has_policy_flag = unrestricted_armament }}}
            if = {
                limit = { has_fleet_flag = large_cargo_ship has_fleet_flag = freighter_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_double_freighter_armed }
            } else_if = {
                limit = { has_fleet_flag = large_cargo_ship has_fleet_flag = tanker_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_double_tanker_armed }
            } else_if = {
                limit = { has_fleet_flag = large_cargo_ship has_fleet_flag = mixed_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_double_tankerfreighter_armed }
            } else_if = {
                limit = { has_fleet_flag = medium_cargo_ship has_fleet_flag = freighter_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_freighter_armed }
            } else_if = {
                limit = { has_fleet_flag = medium_cargo_ship has_fleet_flag = tanker_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_tanker_armed }
            } else_if = {
                limit = { has_fleet_flag = medium_cargo_ship has_fleet_flag = mixed_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_tankerfreighter_armed }
            } else_if = {
                limit = { has_fleet_flag = small_cargo_ship has_fleet_flag = freighter_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_half_freighter_armed }
            } else_if = {
                limit = { has_fleet_flag = small_cargo_ship has_fleet_flag = tanker_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_half_tanker_armed }
            } else_if = {
                limit = { has_fleet_flag = small_cargo_ship has_fleet_flag = mixed_cargo_ship }
                create_ship = { name = random design = random_existing_design random_existing_design = z_iicso_half_tankerfreighter_armed }
            }
        }


        if = {
            limit = { has_fleet_flag = freighter_cargo_ship }
            last_created_ship = { set_name = "Freighter Transport" }
        } else_if = {
            limit = { has_fleet_flag = tanker_cargo_ship }
            last_created_ship = { set_name = "Tanker Transport" }
        } else_if = {
            limit = { has_fleet_flag = mixed_cargo_ship }
            last_created_ship = { set_name = "Mixed Cargo Transport" }
        }

        if = {
            limit = { has_fleet_flag = large_cargo_ship }
            last_created_ship = { set_ship_flag = large_cargo_ship }
        } else_if = {
            limit = { has_fleet_flag = medium_cargo_ship }
            last_created_ship = { set_ship_flag = medium_cargo_ship }
        } else_if = {
            limit = { has_fleet_flag = small_cargo_ship }
            last_created_ship = { set_ship_flag = small_cargo_ship }
        }

        remove_fleet_flag = freighter_cargo_ship
        remove_fleet_flag = tanker_cargo_ship
        remove_fleet_flag = mixed_cargo_ship

        remove_fleet_flag = large_cargo_ship
        remove_fleet_flag = medium_cargo_ship
        remove_fleet_flag = small_cargo_ship

        set_variable = { which = ship_cargo_minerals value = 0 }
        set_variable = { which = ship_cargo_alloys value = 0 }
        set_variable = { which = ship_cargo_exotic_gases value = 0 }
        set_variable = { which = ship_cargo_rare_crystals value = 0 }
        set_variable = { which = ship_cargo_volatile_motes value = 0 }
        set_variable = { which = ship_cargo_sr_zro value = 0 }
        set_variable = { which = ship_cargo_sr_dark_matter value = 0 }
        set_variable = { which = ship_cargo_sr_living_metal value = 0 }
        set_variable = { which = ship_cargo_food value = 0 }
        set_variable = { which = ship_cargo_consumer_goods value = 0 }
        set_variable = { which = ship_cargo_energy value = 0 }

        set_variable = { which = ship_cargo_freighter_type value = 0 }
        set_variable = { which = ship_cargo_tanker_type value = 0 }
    }
}

set_planet_resources = {
    if = {
        limit = { any_deposit = { is_deposit_type = d_minerals_1 }}
        set_variable = { which = iicso_orbital_minerals value = 1 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_minerals_2 }}
        set_variable = { which = iicso_orbital_minerals value = 2 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_minerals_3 }}
        set_variable = { which = iicso_orbital_minerals value = 3 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_minerals_4 }}
        set_variable = { which = iicso_orbital_minerals value = 4 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_minerals_5 }}
        set_variable = { which = iicso_orbital_minerals value = 5 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_minerals_6 }}
        set_variable = { which = iicso_orbital_minerals value = 6 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_minerals_7 }}
        set_variable = { which = iicso_orbital_minerals value = 7 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_minerals_8 }}
        set_variable = { which = iicso_orbital_minerals value = 8 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_minerals_9 }}
        set_variable = { which = iicso_orbital_minerals value = 9 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_minerals_10 }}
        set_variable = { which = iicso_orbital_minerals value = 10 }
    }


    else_if = {
        limit = { any_deposit = { is_deposit_type = d_alloys_1 }}
        set_variable = { which = iicso_orbital_alloys value = 1 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_alloys_2 }}
        set_variable = { which = iicso_orbital_alloys value = 2 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_alloys_3 }}
        set_variable = { which = iicso_orbital_alloys value = 3 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_alloys_4 }}
        set_variable = { which = iicso_orbital_alloys value = 4 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_alloys_5 }}
        set_variable = { which = iicso_orbital_alloys value = 5 }
    }


    else_if = {
        limit = { any_deposit = { is_deposit_type = d_exotic_gases_1 }}
        set_variable = { which = iicso_orbital_exotic_gases value = 1 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_exotic_gases_2 }}
        set_variable = { which = iicso_orbital_exotic_gases value = 2 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_exotic_gases_3 }}
        set_variable = { which = iicso_orbital_exotic_gases value = 3 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_exotic_gases_4 }}
        set_variable = { which = iicso_orbital_exotic_gases value = 4 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_exotic_gases_5 }}
        set_variable = { which = iicso_orbital_exotic_gases value = 5 }
    }

    
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_rare_crystals_1 }}
        set_variable = { which = iicso_orbital_rare_crystals value = 1 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_rare_crystals_2 }}
        set_variable = { which = iicso_orbital_rare_crystals value = 2 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_rare_crystals_3 }}
        set_variable = { which = iicso_orbital_rare_crystals value = 3 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_rare_crystals_4 }}
        set_variable = { which = iicso_orbital_rare_crystals value = 4 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_rare_crystals_5 }}
        set_variable = { which = iicso_orbital_rare_crystals value = 5 }
    }

    
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_volatile_motes_1 }}
        set_variable = { which = iicso_orbital_volatile_motes value = 1 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_volatile_motes_2 }}
        set_variable = { which = iicso_orbital_volatile_motes value = 2 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_volatile_motes_3 }}
        set_variable = { which = iicso_orbital_volatile_motes value = 3 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_volatile_motes_4 }}
        set_variable = { which = iicso_orbital_volatile_motes value = 4 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_volatile_motes_5 }}
        set_variable = { which = iicso_orbital_volatile_motes value = 5 }
    }

    
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_zro_deposit_1 }}
        set_variable = { which = iicso_orbital_sr_zro value = 1 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_zro_deposit_2 }}
        set_variable = { which = iicso_orbital_sr_zro value = 2 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_zro_deposit_3 }}
        set_variable = { which = iicso_orbital_sr_zro value = 3 }
    }

    
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_dark_matter_deposit_1 }}
        set_variable = { which = iicso_orbital_sr_dark_matter value = 1 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_dark_matter_deposit_2 }}
        set_variable = { which = iicso_orbital_sr_dark_matter value = 2 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_dark_matter_deposit_3 }}
        set_variable = { which = iicso_orbital_sr_dark_matter value = 3 }
    }

    
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_living_metal_deposit }}
        set_variable = { which = iicso_orbital_sr_living_metal value = 1 }
    }

    
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_energy_1 }}
        set_variable = { which = iicso_orbital_energy value = 1 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_energy_2 }}
        set_variable = { which = iicso_orbital_energy value = 2 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_energy_3 }}
        set_variable = { which = iicso_orbital_energy value = 3 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_energy_4 }}
        set_variable = { which = iicso_orbital_energy value = 4 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_energy_5 }}
        set_variable = { which = iicso_orbital_energy value = 5 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_energy_6 }}
        set_variable = { which = iicso_orbital_energy value = 6 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_energy_7 }}
        set_variable = { which = iicso_orbital_energy value = 7 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_energy_8 }}
        set_variable = { which = iicso_orbital_energy value = 8 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_energy_9 }}
        set_variable = { which = iicso_orbital_energy value = 9 }
    }
    else_if = {
        limit = { any_deposit = { is_deposit_type = d_energy_10 }}
        set_variable = { which = iicso_orbital_energy value = 10 }
    }
}


#THIS = mining_station
remove_mining_station_income_resource = {
    set_variable = { which = iicso_orbital_$RESOURCE$ value = orbit }
    while = {
        count = iicso_orbital_$RESOURCE$
        owner = { add_resource = { $RESOURCE$ = -1 }}
        orbit = {
            change_variable = { which = iicso_stockpile_$RESOURCE$ value = 1 }
        }
    }
}

#THIS = country
remove_mining_station_income = {
    every_mining_station = {
        remove_mining_station_income_resource = { RESOURCE = minerals }
        remove_mining_station_income_resource = { RESOURCE = alloys }
        remove_mining_station_income_resource = { RESOURCE = exotic_gases }
        remove_mining_station_income_resource = { RESOURCE = rare_crystals }
        remove_mining_station_income_resource = { RESOURCE = volatile_motes }
        remove_mining_station_income_resource = { RESOURCE = sr_zro }
        remove_mining_station_income_resource = { RESOURCE = sr_dark_matter }
        remove_mining_station_income_resource = { RESOURCE = sr_living_metal }
        remove_mining_station_income_resource = { RESOURCE = energy }
        #log = "removing [THIS.orbit.iicso_orbital_minerals] minerals from empire total"
    }
}

#THIS = country
remove_starbase_income = {
    every_owned_starbase = {
        if = {
            limit = { has_starbase_building = hydroponics_bay }
            owner = { add_resource = { food = -3 }}
            solar_system = {
                random_system_planet = {
                    limit = { is_primary_star = yes }
                    change_variable = { which = iicso_stockpile_food value = 3 }
                }
            }
        }
        if = {
            limit = { has_starbase_building = nebula_refinery }
            owner = { add_resource = { minerals = -6 }}
            solar_system = {
                random_system_planet = {
                    limit = { is_primary_star = yes }
                    change_variable = { which = iicso_stockpile_minerals value = 6 }
                }
            }
        }
        
        if = {
            limit = { has_starbase_module = solar_panel_network }
            if = {
                limit = {
                    exists = owner
                    owner = {
                        is_galactic_community_member = yes
                    }
                    OR = {
                        is_active_resolution = "resolution_galacticstudies_astral_studies_network"
                        is_active_resolution = "resolution_galacticstudies_advanced_xenostudies"
                        is_active_resolution = "resolution_galacticstudies_ethical_guideline_refactoring"
                        is_active_resolution = "resolution_galacticstudies_extradimensional_experimentation"
                    }
                }
                owner = { add_resource = { energy = -6 }}
                solar_system = {
                    random_system_planet = {
                        limit = { is_primary_star = yes }
                        change_variable = { which = iicso_stockpile_energy value = 6 }
                    }
                }
            }
            else = {
                owner = { add_resource = { energy = -3 }}
                solar_system = {
                    random_system_planet = {
                        limit = { is_primary_star = yes }
                        change_variable = { which = iicso_stockpile_energy value = 3 }
                    }
                }
            }
        }
    }
}